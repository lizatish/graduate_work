name: Python application

on: [ pull_request ]


jobs:
  test:

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - uses: isbang/compose-action@v1.4.1
        with:
          compose-file: "tests/functional/docker-compose.yaml"

      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"

      - uses: actions/cache@v3
        id: cache
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.*') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r tests/functional/requirements.txt

      - name: Set pythonpath
        run: |
          echo "PYTHONPATH=ugc-service/src" >> $GITHUB_ENV

      - name: Run pytest
        run: |
          pytest

  linter:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: [ 3.9, 3.10.x ]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 flake8-html

      - name: Lint with flake8
        run: |
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --format=html --htmldir=flake-report

  mypy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: Set up Python 3.10
        uses: actions/setup-python@v2
        with:
          python-version: 3.10.9

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mypy
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

      - name: Run mypy
        run: |
          mypy . --install-types --non-interactive
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: send telegram message on pull request
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_TO }}
          token: ${{ secrets.TELEGRAM_TOKEN }}
          message: |
            ${{ github.actor }} created new pull request.

            Repository: ${{ github.repository }}

            See changes: https://github.com/${{ github.repository }}/commit/${{github.sha}}